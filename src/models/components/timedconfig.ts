/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const MonthlyType = {
    Each: "each",
    On: "on",
} as const;
export type MonthlyType = ClosedEnum<typeof MonthlyType>;

export const Ordinal = {
    One: "1",
    Two: "2",
    Three: "3",
    Four: "4",
    Five: "5",
    Last: "last",
} as const;
export type Ordinal = ClosedEnum<typeof Ordinal>;

export const OrdinalValue = {
    Day: "day",
    Weekday: "weekday",
    Weekend: "weekend",
    Sunday: "sunday",
    Monday: "monday",
    Tuesday: "tuesday",
    Wednesday: "wednesday",
    Thursday: "thursday",
    Friday: "friday",
    Saturday: "saturday",
} as const;
export type OrdinalValue = ClosedEnum<typeof OrdinalValue>;

export const WeekDays = {
    Monday: "monday",
    Tuesday: "tuesday",
    Wednesday: "wednesday",
    Thursday: "thursday",
    Friday: "friday",
    Saturday: "saturday",
    Sunday: "sunday",
} as const;
export type WeekDays = ClosedEnum<typeof WeekDays>;

export type TimedConfig = {
    atTime?: string | undefined;
    monthDays?: Array<string> | undefined;
    monthlyType?: MonthlyType | undefined;
    ordinal?: Ordinal | undefined;
    ordinalValue?: OrdinalValue | undefined;
    weekDays?: Array<WeekDays> | undefined;
};

/** @internal */
export namespace MonthlyType$ {
    export const inboundSchema: z.ZodNativeEnum<typeof MonthlyType> = z.nativeEnum(MonthlyType);
    export const outboundSchema: z.ZodNativeEnum<typeof MonthlyType> = inboundSchema;
}

/** @internal */
export namespace Ordinal$ {
    export const inboundSchema: z.ZodNativeEnum<typeof Ordinal> = z.nativeEnum(Ordinal);
    export const outboundSchema: z.ZodNativeEnum<typeof Ordinal> = inboundSchema;
}

/** @internal */
export namespace OrdinalValue$ {
    export const inboundSchema: z.ZodNativeEnum<typeof OrdinalValue> = z.nativeEnum(OrdinalValue);
    export const outboundSchema: z.ZodNativeEnum<typeof OrdinalValue> = inboundSchema;
}

/** @internal */
export namespace WeekDays$ {
    export const inboundSchema: z.ZodNativeEnum<typeof WeekDays> = z.nativeEnum(WeekDays);
    export const outboundSchema: z.ZodNativeEnum<typeof WeekDays> = inboundSchema;
}

/** @internal */
export namespace TimedConfig$ {
    export const inboundSchema: z.ZodType<TimedConfig, z.ZodTypeDef, unknown> = z.object({
        atTime: z.string().optional(),
        monthDays: z.array(z.string()).optional(),
        monthlyType: MonthlyType$.inboundSchema.optional(),
        ordinal: Ordinal$.inboundSchema.optional(),
        ordinalValue: OrdinalValue$.inboundSchema.optional(),
        weekDays: z.array(WeekDays$.inboundSchema).optional(),
    });

    export type Outbound = {
        atTime?: string | undefined;
        monthDays?: Array<string> | undefined;
        monthlyType?: string | undefined;
        ordinal?: string | undefined;
        ordinalValue?: string | undefined;
        weekDays?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TimedConfig> = z.object({
        atTime: z.string().optional(),
        monthDays: z.array(z.string()).optional(),
        monthlyType: MonthlyType$.outboundSchema.optional(),
        ordinal: Ordinal$.outboundSchema.optional(),
        ordinalValue: OrdinalValue$.outboundSchema.optional(),
        weekDays: z.array(WeekDays$.outboundSchema).optional(),
    });
}
