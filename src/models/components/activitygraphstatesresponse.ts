/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const Channels = {
    InApp: "in_app",
    Email: "email",
    Sms: "sms",
    Chat: "chat",
    Push: "push",
} as const;
export type Channels = ClosedEnum<typeof Channels>;

export type ActivityGraphStatesResponse = {
    id: string;
    channels: Array<Channels>;
    count: number;
    templates: Array<string>;
};

/** @internal */
export namespace Channels$ {
    export const inboundSchema: z.ZodNativeEnum<typeof Channels> = z.nativeEnum(Channels);
    export const outboundSchema: z.ZodNativeEnum<typeof Channels> = inboundSchema;
}

/** @internal */
export namespace ActivityGraphStatesResponse$ {
    export const inboundSchema: z.ZodType<ActivityGraphStatesResponse, z.ZodTypeDef, unknown> = z
        .object({
            _id: z.string(),
            channels: z.array(Channels$.inboundSchema),
            count: z.number(),
            templates: z.array(z.string()),
        })
        .transform((v) => {
            return remap$(v, {
                _id: "id",
            });
        });

    export type Outbound = {
        _id: string;
        channels: Array<string>;
        count: number;
        templates: Array<string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ActivityGraphStatesResponse> = z
        .object({
            id: z.string(),
            channels: z.array(Channels$.outboundSchema),
            count: z.number(),
            templates: z.array(z.string()),
        })
        .transform((v) => {
            return remap$(v, {
                id: "_id",
            });
        });
}
