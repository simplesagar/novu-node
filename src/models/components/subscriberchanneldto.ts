/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ChannelCredentialsDto, ChannelCredentialsDto$ } from "./channelcredentialsdto.js";
import * as z from "zod";

export type SubscriberChannelDtoProviderId = {};

export type SubscriberChannelDto = {
    credentials: ChannelCredentialsDto;
    integrationIdentifier?: string | undefined;
    providerId: SubscriberChannelDtoProviderId;
};

/** @internal */
export namespace SubscriberChannelDtoProviderId$ {
    export const inboundSchema: z.ZodType<SubscriberChannelDtoProviderId, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SubscriberChannelDtoProviderId> =
        z.object({});
}

/** @internal */
export namespace SubscriberChannelDto$ {
    export const inboundSchema: z.ZodType<SubscriberChannelDto, z.ZodTypeDef, unknown> = z.object({
        credentials: ChannelCredentialsDto$.inboundSchema,
        integrationIdentifier: z.string().optional(),
        providerId: z.lazy(() => SubscriberChannelDtoProviderId$.inboundSchema),
    });

    export type Outbound = {
        credentials: ChannelCredentialsDto$.Outbound;
        integrationIdentifier?: string | undefined;
        providerId: SubscriberChannelDtoProviderId$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SubscriberChannelDto> = z.object(
        {
            credentials: ChannelCredentialsDto$.outboundSchema,
            integrationIdentifier: z.string().optional(),
            providerId: z.lazy(() => SubscriberChannelDtoProviderId$.outboundSchema),
        }
    );
}
