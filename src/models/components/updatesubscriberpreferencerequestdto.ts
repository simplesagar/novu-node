/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ChannelPreference, ChannelPreference$ } from "./channelpreference.js";
import * as z from "zod";

export type UpdateSubscriberPreferenceRequestDto = {
    /**
     * The subscriber preferences for every ChannelTypeEnum for the workflow assigned.
     */
    channel?: ChannelPreference | undefined;
    /**
     * Sets if the workflow is fully enabled for all channels or not for the subscriber.
     */
    enabled?: boolean | undefined;
};

/** @internal */
export namespace UpdateSubscriberPreferenceRequestDto$ {
    export const inboundSchema: z.ZodType<
        UpdateSubscriberPreferenceRequestDto,
        z.ZodTypeDef,
        unknown
    > = z.object({
        channel: ChannelPreference$.inboundSchema.optional(),
        enabled: z.boolean().optional(),
    });

    export type Outbound = {
        channel?: ChannelPreference$.Outbound | undefined;
        enabled?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UpdateSubscriberPreferenceRequestDto
    > = z.object({
        channel: ChannelPreference$.outboundSchema.optional(),
        enabled: z.boolean().optional(),
    });
}
