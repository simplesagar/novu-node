/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ChannelPreference, ChannelPreference$ } from "./channelpreference.js";
import * as z from "zod";

export type UpdateSubscriberGlobalPreferencesRequestDto = {
    /**
     * Enable or disable the subscriber global preferences.
     */
    enabled?: boolean | undefined;
    /**
     * The subscriber global preferences for every ChannelTypeEnum.
     */
    preferences?: Array<ChannelPreference> | undefined;
};

/** @internal */
export namespace UpdateSubscriberGlobalPreferencesRequestDto$ {
    export const inboundSchema: z.ZodType<
        UpdateSubscriberGlobalPreferencesRequestDto,
        z.ZodTypeDef,
        unknown
    > = z.object({
        enabled: z.boolean().optional(),
        preferences: z.array(ChannelPreference$.inboundSchema).optional(),
    });

    export type Outbound = {
        enabled?: boolean | undefined;
        preferences?: Array<ChannelPreference$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UpdateSubscriberGlobalPreferencesRequestDto
    > = z.object({
        enabled: z.boolean().optional(),
        preferences: z.array(ChannelPreference$.outboundSchema).optional(),
    });
}
