/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import { EmailBlockStyles, EmailBlockStyles$ } from "./emailblockstyles.js";
import * as z from "zod";

export const EmailBlockType = {
    Text: "text",
    Button: "button",
} as const;
export type EmailBlockType = ClosedEnum<typeof EmailBlockType>;

export type EmailBlock = {
    content: string;
    styles?: EmailBlockStyles | undefined;
    type: EmailBlockType;
    url?: string | undefined;
};

/** @internal */
export namespace EmailBlockType$ {
    export const inboundSchema: z.ZodNativeEnum<typeof EmailBlockType> =
        z.nativeEnum(EmailBlockType);
    export const outboundSchema: z.ZodNativeEnum<typeof EmailBlockType> = inboundSchema;
}

/** @internal */
export namespace EmailBlock$ {
    export const inboundSchema: z.ZodType<EmailBlock, z.ZodTypeDef, unknown> = z.object({
        content: z.string(),
        styles: EmailBlockStyles$.inboundSchema.optional(),
        type: EmailBlockType$.inboundSchema,
        url: z.string().optional(),
    });

    export type Outbound = {
        content: string;
        styles?: EmailBlockStyles$.Outbound | undefined;
        type: string;
        url?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EmailBlock> = z.object({
        content: z.string(),
        styles: EmailBlockStyles$.outboundSchema.optional(),
        type: EmailBlockType$.outboundSchema,
        url: z.string().optional(),
    });
}
