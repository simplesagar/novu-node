/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type TopicsControllerRemoveSubscribersRequest = {
    topicKey: string;
    removeSubscribersRequestDto: components.RemoveSubscribersRequestDto;
};

/** @internal */
export namespace TopicsControllerRemoveSubscribersRequest$ {
    export const inboundSchema: z.ZodType<
        TopicsControllerRemoveSubscribersRequest,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            topicKey: z.string(),
            RemoveSubscribersRequestDto: components.RemoveSubscribersRequestDto$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                RemoveSubscribersRequestDto: "removeSubscribersRequestDto",
            });
        });

    export type Outbound = {
        topicKey: string;
        RemoveSubscribersRequestDto: components.RemoveSubscribersRequestDto$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        TopicsControllerRemoveSubscribersRequest
    > = z
        .object({
            topicKey: z.string(),
            removeSubscribersRequestDto: components.RemoveSubscribersRequestDto$.outboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                removeSubscribersRequestDto: "RemoveSubscribersRequestDto",
            });
        });
}
