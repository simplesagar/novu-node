/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * Direction of the sorting query param
 */
export const OrderBy = {
    Asc: "ASC",
    Desc: "DESC",
} as const;
/**
 * Direction of the sorting query param
 */
export type OrderBy = ClosedEnum<typeof OrderBy>;

export type LayoutsControllerListLayoutsRequest = {
    /**
     * Number of page for pagination
     */
    page?: number | undefined;
    /**
     * Size of page for pagination
     */
    pageSize?: number | undefined;
    /**
     * Sort field. Currently only supported `createdAt`
     */
    sortBy?: string | undefined;
    /**
     * Direction of the sorting query param
     */
    orderBy?: OrderBy | undefined;
};

/** @internal */
export namespace OrderBy$ {
    export const inboundSchema: z.ZodNativeEnum<typeof OrderBy> = z.nativeEnum(OrderBy);
    export const outboundSchema: z.ZodNativeEnum<typeof OrderBy> = inboundSchema;
}

/** @internal */
export namespace LayoutsControllerListLayoutsRequest$ {
    export const inboundSchema: z.ZodType<
        LayoutsControllerListLayoutsRequest,
        z.ZodTypeDef,
        unknown
    > = z.object({
        page: z.number().optional(),
        pageSize: z.number().optional(),
        sortBy: z.string().optional(),
        orderBy: OrderBy$.inboundSchema.optional(),
    });

    export type Outbound = {
        page?: number | undefined;
        pageSize?: number | undefined;
        sortBy?: string | undefined;
        orderBy?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        LayoutsControllerListLayoutsRequest
    > = z.object({
        page: z.number().optional(),
        pageSize: z.number().optional(),
        sortBy: z.string().optional(),
        orderBy: OrderBy$.outboundSchema.optional(),
    });
}
