/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type IntegrationsControllerUpdateIntegrationByIdRequest = {
    integrationId: string;
    updateIntegrationRequestDto: components.UpdateIntegrationRequestDto;
};

/** @internal */
export namespace IntegrationsControllerUpdateIntegrationByIdRequest$ {
    export const inboundSchema: z.ZodType<
        IntegrationsControllerUpdateIntegrationByIdRequest,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            integrationId: z.string(),
            UpdateIntegrationRequestDto: components.UpdateIntegrationRequestDto$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                UpdateIntegrationRequestDto: "updateIntegrationRequestDto",
            });
        });

    export type Outbound = {
        integrationId: string;
        UpdateIntegrationRequestDto: components.UpdateIntegrationRequestDto$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        IntegrationsControllerUpdateIntegrationByIdRequest
    > = z
        .object({
            integrationId: z.string(),
            updateIntegrationRequestDto: components.UpdateIntegrationRequestDto$.outboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                updateIntegrationRequestDto: "UpdateIntegrationRequestDto",
            });
        });
}
