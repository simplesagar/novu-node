/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type TopicsControllerAddSubscribersRequest = {
    topicKey: string;
    addSubscribersRequestDto: components.AddSubscribersRequestDto;
};

/** @internal */
export namespace TopicsControllerAddSubscribersRequest$ {
    export const inboundSchema: z.ZodType<
        TopicsControllerAddSubscribersRequest,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            topicKey: z.string(),
            AddSubscribersRequestDto: components.AddSubscribersRequestDto$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                AddSubscribersRequestDto: "addSubscribersRequestDto",
            });
        });

    export type Outbound = {
        topicKey: string;
        AddSubscribersRequestDto: components.AddSubscribersRequestDto$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        TopicsControllerAddSubscribersRequest
    > = z
        .object({
            topicKey: z.string(),
            addSubscribersRequestDto: components.AddSubscribersRequestDto$.outboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                addSubscribersRequestDto: "AddSubscribersRequestDto",
            });
        });
}
