/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type TenantControllerUpdateTenantRequest = {
    identifier: string;
    updateTenantRequestDto: components.UpdateTenantRequestDto;
};

/** @internal */
export namespace TenantControllerUpdateTenantRequest$ {
    export const inboundSchema: z.ZodType<
        TenantControllerUpdateTenantRequest,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            identifier: z.string(),
            UpdateTenantRequestDto: components.UpdateTenantRequestDto$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                UpdateTenantRequestDto: "updateTenantRequestDto",
            });
        });

    export type Outbound = {
        identifier: string;
        UpdateTenantRequestDto: components.UpdateTenantRequestDto$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        TenantControllerUpdateTenantRequest
    > = z
        .object({
            identifier: z.string(),
            updateTenantRequestDto: components.UpdateTenantRequestDto$.outboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                updateTenantRequestDto: "UpdateTenantRequestDto",
            });
        });
}
