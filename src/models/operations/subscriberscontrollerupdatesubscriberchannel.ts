/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type SubscribersControllerUpdateSubscriberChannelRequest = {
    subscriberId: string;
    updateSubscriberChannelRequestDto: components.UpdateSubscriberChannelRequestDto;
};

/** @internal */
export namespace SubscribersControllerUpdateSubscriberChannelRequest$ {
    export const inboundSchema: z.ZodType<
        SubscribersControllerUpdateSubscriberChannelRequest,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            subscriberId: z.string(),
            UpdateSubscriberChannelRequestDto:
                components.UpdateSubscriberChannelRequestDto$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                UpdateSubscriberChannelRequestDto: "updateSubscriberChannelRequestDto",
            });
        });

    export type Outbound = {
        subscriberId: string;
        UpdateSubscriberChannelRequestDto: components.UpdateSubscriberChannelRequestDto$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        SubscribersControllerUpdateSubscriberChannelRequest
    > = z
        .object({
            subscriberId: z.string(),
            updateSubscriberChannelRequestDto:
                components.UpdateSubscriberChannelRequestDto$.outboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                updateSubscriberChannelRequestDto: "UpdateSubscriberChannelRequestDto",
            });
        });
}
